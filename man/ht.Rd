% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ht.R
\name{ht}
\alias{ht}
\alias{ht.siblle}
\title{Hypothesis tests using simulation based log likelihood estimates}
\usage{
\method{ht}{siblle}(
  siblle,
  null.value,
  type = NULL,
  test = NULL,
  at.param = NULL,
  weight.at.param = NULL,
  weights = NULL,
  fraction = NULL,
  center = NULL
)
}
\arguments{
\item{siblle}{A class 'siblle' object, containing the simulation based log likelihood estimates and, if those estimates were obtained for different parameter values, the parameter values at which the log likelihood estimates were obtained.}

\item{null.value}{The null value(s) for the hypothesis test. Either a numeric vector (for running a test for a single null value, which can have one or more components) or a list of numeric vectors (for running tests for multiple null values).}

\item{type}{A character string indicating what type of situation is considered. One of "point", "regression", or "LAN". See Details.}

\item{test}{A character string indicating the quantity to be tested about. One of "loglik", "moments", "MLE", "information", or "parameter". See Details.}

\item{at.param}{For the cases 'type' = "regression" or "LAN" and 'test' = "loglik", the hypothesis test is about the value of the log likelihood function evaluated at 'at.param'}

\item{weight.at.param}{The relative inverse variance for the simulation based log likelihood estimator at parameter value 'at.param'. The weight for regression is proportional to the inverse variance. This argument is used for the cases 'type' = "regression" or "LAN" and 'test' = "loglik". The default value is 1.}

\item{weights}{An optional argument. The un-normalized weights of the log likelihood estimates for regression. Either a numeric vector of length equal to the 'siblle' object, or a character string equal to "tricube". The default weights are equal to one for all the points if not specified here or in the siblle object. See Details below.}

\item{fraction}{An optional argument used when the 'weights' argument is equal to "tricube". This argument specifies the fraction of points with nonzero weights when the tricube function is used for weight assignment.}

\item{center}{An optional argument indicating the center of the local regression for the case where 'weights' is specified as "tricube".}
}
\value{
A list consisting of the following components are returned.
\itemize{
\item{meta_model_MLE_for_*: simulation based maximum likelihood estimate under an appropriate meta model,}
\item{Hypothesis_Tests: a data frame of the null values and the corresponding (approximate) p-values,}
\item{pvalue_numerical_error_size: When 'test'="moments" or "loglik", approximate size of error in numerical evaluation of p-values (automatically set to approximately 0.01 or 0.001). For these case, p-values are found using the MLLR_1 or MLLR_2 distributions, whose cumulative distribution functions are numerically evaluated using random number generations. Thus p-values have some stochastic error. The size of the numerical error is automatically set to approximately 0.01, but if p-value found is less than 0.01 for any of the provided null values, more computations are carried out to reduce the numerical error size to approximately 0.001. Note that when 'test'="MLE", "information", or "parameter", the (standard) F distribution is used, so this list component is omitted.}
}
When 'test' = "moments", exact p-values are shown (here "exact" means that the formula for the p-value is not based on approximation; this does not mean that size of the numerical evaluation is equal to zero.)
In other cases, approximate p-values are shown. See Park, J. (2023) for how approximations are made.
}
\description{
\code{ht} outputs results of hypothesis tests carried out using simulation based log likelihood estimates. See Park (2023) for more information.
}
\details{
This is a generic function, taking a class 'siblle' object as the first argument.
Hypothesis tests are carried out under a normal meta model--that is, the log likelihood estimates (whose values are given in the 'siblle' object) are normally distributed.

When 'null.value' is a list, a hypothesis test is carried out for each null value specified in the list. For example, in order to run tests for more than one null values for a single-component parameter, you can let 'null.value=as.list(vector_of_null_values)'.

Some tests are exact under the normal meta model (e.g., tests on the mean and the variance of the log likelihood estimator) while others are approximate.  See Park (2023) for more information.

The 'type' argument should be one of "point", "regression", or "LAN".
The case 'type' = "point" means that the 'siblle' object contains simulation based log likelihood estimates for a single, fixed parameter value.
The case 'type' = "regression" means that the 'siblle' object contains simulation based log likelihood estimates obtained at more than one parameter values, specified by the 'params' attribute of the 'siblle' object. A local quadratic regression for the estimated log likelihood values will be used for hypothesis tests, where the x-axis values are given by the 'params' values of the 'siblle' object and the y-axis values are the corresponding log likelihood estimates.
The case 'type' = "LAN" means that inference on the model parameter will be carried out under the local asymptotic normality (Le Cam and Yang, 2000) condition.
If the 'siblle' object has 'params' attribute whose length is equal to the length of the object, then 'type' defaults to "LAN".
If the 'siblle' object does not have 'params' attribute, then 'type' defaults to "point".

When 'type' = "point", 'test' can only be "loglik" or "moments".
In this case 'test' = "loglik" means the hypothesis test \eqn{H_0: l = null.value} versus \eqn{H_1: l != null.value} will be performed where l is the log likelihood given the observed data.
If 'test' = "moments", a test about the mean and the variance of the simulation based log likelihood estimator is conducted.
The 'null.value' should be a numeric vector of length two (the first component being the mean and the second being the variance), or a list of numeric vectors of length two.
When 'type' = "point", 'test' = "loglik" is assumed by default, unless the 'test' argument is supplied.

When 'type' = "regression", 'test' can be "loglik", "moments", "MLE", or "information".
If 'test' = "loglik", the test is about the value of the log likelihood function evaluated at 'at.param'.
If 'test' = "moments", the test is about the quadruple \eqn{a, b, c, sigma^2} where \eqn{a, b, c} are coefficients of the polynomial describing the mean of the simulation based likelihood estimator (i.e., \eqn{l(\theta) = a + b \theta + c \theta^2}) and \eqn{\sigma^2} is the variance of the SIBLLE.
If 'test' = "MLE", the test is about the location of the maximum likelihood estimate.
If 'test' = "information", the test is about the Fisher information, which is (-2) times the value of \eqn{c}, the quadratic coefficient of the mean function of the SIBLLE.
When 'type' = "regression", 'test' = "MLE" is assumed by default.

When 'type' = "LAN", 'test' can be "loglik", "moments", "MLE", "information", or "parameter".
If 'test' is "loglik", "moments", "MLE", or "information", the output is the same as in the case where 'type' = "regression".
If 'test' is "parameter", a test about the value of the model parameter is conducted under the local asymptotic normality assumption.
When 'type' = "LAN", 'test' = "parameter" is assumed by default.

When quadratic regression is carried out, the weights for the simulation based likelihood estimates can be specified.  The weights can either be given as an attribute 'weights' of the 'siblle' object, or as a function argument 'weights', with the latter being used when both are supplied. In either case, 'weights' should be a numeric vector of length equal to that of 'siblle'. If 'weights' is given as an argument to the "ht" function, it can be specified alternatively as a character string "tricube". In this case, the tricube weight (see Cleveland, 1979) is used, and the specified 'fraction' of the points will have nonzero weights. The 'center' argument determines at which parameter value the tricube weight takes the maximum. If weights are not supplied in either location, all weights are taken to be equal to 1.
It is important to note that the weights are not supposed to be normalized (i.e., sum to one). Multiplying all weights by the same constant changes the local regression results. Roughly speaking, the variance of the simulation based log likelihood estimator is assumed to be sigma^2/(the weight for the point). See Park (2023) for more information.
}
\references{
Park, J. (2023). On simulation based inference for implicitly defined models

Cleveland, W. S. (1979). Robust locally weighted regression and smoothing scatterplots. Journal of the American statistical association, 74(368), 829-836.

Le Cam, L. and Yang, G. L. (2000). Asymptotics in statistics: some basic concepts. Springer-Verlag, New York.
}
